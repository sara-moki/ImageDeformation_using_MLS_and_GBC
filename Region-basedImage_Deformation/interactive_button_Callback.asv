function interactive_button_Callback(~, ~, handles)
% hObject    handle to interactive_button (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
ud = get(handles.figure1,'userdata'); 
ud.tf = zeros(size(ud.xx,1),ud.index);
for i=1:ud.index
  ud.tf(:,i) = inROI(ud.polyg{i},ud.xx,ud.yy);
end

%find the interiors w.r.t. all polygon
ud.tff=zeros(length(ud.xx),1);
for i=1:ud.index
       ud.tff= ud.tff + ud.tf(:,i);
end
ud.A = zeros(ud.index,1);
ud.deformPol = ud.polyg;
for i=1:ud.index
  if strcmp(ud.polyg_planar,'Polygon')     
      ud.deformPol{i}.InteractionsAllowed = 'all';
  elseif strcmp(ud.polyg_planar,'Smooth Region') 
      if strcmp(ud.animation,'Translation')
      ud.deformPol{i}.InteractionsAllowed = 'translate';
      ud.deformPol{i}.Visible = 'on';
      ud.deformPol{i}.MarkerSize  =0.01;
      end
   end    
end
waitforbuttonpress;
           for i = 1: ud.index
              ud.A(i,1)= ud.deformPol{i}.Selected;
           end
ud.indexFoundP = find(ud.A==1);

ud.xx2 = ud.xx;
ud.yy2=ud.yy;
ud.uu = cell2mat(ud.uxG);
ud.vv = cell2mat(ud.vyG);
% ud.uu2 = cell2mat(ud.uxG2);%%%%%%
% ud.vv2 = cell2mat(ud.vyG2);%%%%%%%
ud.InputPoints = [ud.uu(:), ud.vv(:)];
% ud.InputPoints2 = [ud.uu2(:), ud.vv2(:)];%%%%%%%%%
ud.OutputPoints=ud.InputPoints;
% ud.OutputPoints2=ud.InputPoints2;%%%%%%%%
%%%%%%%%Computing the weight%%%%%%%%%
% WG_prod = repmat(ud.w1G,1,length(ud.w2G)).*ud.w2G;
% jacobian = ud.Jac_P';
% L= length(jacobian)/length(WG_prod(:));
% ud.omega = zeros(length(ud.xx),size(ud.InputPoints,1));
% for i=1:length(ud.xx)
%    ud.omega(i,:) = sum(repmat(WG_prod(:),L,1).*(jacobian)./((vecnorm(ud.InputPoints'- [ud.xx(i);ud.yy(i)])).^(2*ud.alpha)),1);
% end
set(ud.figure,'WindowButtonMotionFcn','animator_area move')
set(ud.figure,'WindowButtonUpFcn','animator_area stop');
set(handles.figure1,'userdata',ud);